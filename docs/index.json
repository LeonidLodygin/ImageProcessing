[{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing.html","title":"ImageProcessing","content":"Agents \nArguments \nCpuProcessing \nGpuKernels \nGpuProcessing \nImageArrayProcessing \nKernels \nMain \nMyImage \nTypes"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html","title":"Agents","content":"Agents \n\n Module with implementation of agents for image processing\n  \nAgents.listAllFiles \nlistAllFiles \nAgents.outFile \noutFile \nAgents.imgSaver \nimgSaver \nAgents.imgProcessor \nimgProcessor \nAgents.msgLogger \nmsgLogger \nAgents.superAgent \nsuperAgent \nAgents.superImageProcessing \nsuperImageProcessing"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#listAllFiles","title":"Agents.listAllFiles","content":"Agents.listAllFiles \nlistAllFiles \n\n List of all files in directory\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#outFile","title":"Agents.outFile","content":"Agents.outFile \noutFile \n\n Creation of path to save the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#imgSaver","title":"Agents.imgSaver","content":"Agents.imgSaver \nimgSaver \n\n Agent for saving images\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#imgProcessor","title":"Agents.imgProcessor","content":"Agents.imgProcessor \nimgProcessor \n\n Agent for image processing\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#msgLogger","title":"Agents.msgLogger","content":"Agents.msgLogger \nmsgLogger \n\n Agent for logging\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#superAgent","title":"Agents.superAgent","content":"Agents.superAgent \nsuperAgent \n\n Agent with the ability to process and save the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-agents.html#superImageProcessing","title":"Agents.superImageProcessing","content":"Agents.superImageProcessing \nsuperImageProcessing \n\n Image processing using superAgents\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html","title":"Arguments","content":"Arguments \n\n Module with implementation of work via console commands\n  \nArguments.CliArguments \nCliArguments \nArguments.first \nfirst \nArguments.second \nsecond \nArguments.third \nthird \nArguments.fourth \nfourth \nArguments.modificationParser \nmodificationParser \nArguments.modificationGpuParser \nmodificationGpuParser \nArguments.deviceParser \ndeviceParser"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#first","title":"Arguments.first","content":"Arguments.first \nfirst \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#second","title":"Arguments.second","content":"Arguments.second \nsecond \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#third","title":"Arguments.third","content":"Arguments.third \nthird \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#fourth","title":"Arguments.fourth","content":"Arguments.fourth \nfourth \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#modificationParser","title":"Arguments.modificationParser","content":"Arguments.modificationParser \nmodificationParser \n\n Parsing of CPU modification\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#modificationGpuParser","title":"Arguments.modificationGpuParser","content":"Arguments.modificationGpuParser \nmodificationGpuParser \n\n Parsing of GPU modification\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments.html#deviceParser","title":"Arguments.deviceParser","content":"Arguments.deviceParser \ndeviceParser \n\n Parsing of device\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html","title":"CliArguments","content":"CliArguments \n \nCliArguments.InputPath \nInputPath \nCliArguments.OutputPath \nOutputPath \nCliArguments.Agents \nAgents \nCliArguments.SuperAgents \nSuperAgents \nCliArguments.Modifications \nModifications \nCliArguments.GpGpu \nGpGpu"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html#InputPath","title":"CliArguments.InputPath","content":"CliArguments.InputPath \nInputPath \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html#OutputPath","title":"CliArguments.OutputPath","content":"CliArguments.OutputPath \nOutputPath \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html#Agents","title":"CliArguments.Agents","content":"CliArguments.Agents \nAgents \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html#SuperAgents","title":"CliArguments.SuperAgents","content":"CliArguments.SuperAgents \nSuperAgents \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html#Modifications","title":"CliArguments.Modifications","content":"CliArguments.Modifications \nModifications \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-arguments-cliarguments.html#GpGpu","title":"CliArguments.GpGpu","content":"CliArguments.GpGpu \nGpGpu \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-cpuprocessing.html","title":"CpuProcessing","content":"CpuProcessing \n\n Module with functions for image processing on the CPU\n  \nCpuProcessing.applyFilter \napplyFilter \nCpuProcessing.rotate \nrotate \nCpuProcessing.mirror \nmirror \nCpuProcessing.fishEye \nfishEye"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-cpuprocessing.html#applyFilter","title":"CpuProcessing.applyFilter","content":"CpuProcessing.applyFilter \napplyFilter \n\n Filter application\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-cpuprocessing.html#rotate","title":"CpuProcessing.rotate","content":"CpuProcessing.rotate \nrotate \n\n Rotate of image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-cpuprocessing.html#mirror","title":"CpuProcessing.mirror","content":"CpuProcessing.mirror \nmirror \n\n Image Reflection\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-cpuprocessing.html#fishEye","title":"CpuProcessing.fishEye","content":"CpuProcessing.fishEye \nfishEye \n\n Applying \u0022FishEye\u0022 to an image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html","title":"GpuKernels","content":"GpuKernels \n\n Module with kernels for image processing on the GPU\n  \nGpuKernels.applyFilterKernel \napplyFilterKernel \nGpuKernels.applyFilterProcessor \napplyFilterProcessor \nGpuKernels.rotateKernel \nrotateKernel \nGpuKernels.rotateKernelProcessor \nrotateKernelProcessor \nGpuKernels.mirrorKernel \nmirrorKernel \nGpuKernels.mirrorKernelProcessor \nmirrorKernelProcessor \nGpuKernels.fishEyeKernel \nfishEyeKernel \nGpuKernels.fishEyeKernelProcessor \nfishEyeKernelProcessor"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#applyFilterKernel","title":"GpuKernels.applyFilterKernel","content":"GpuKernels.applyFilterKernel \napplyFilterKernel \n\n Compilation of kernel to apply filter to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#applyFilterProcessor","title":"GpuKernels.applyFilterProcessor","content":"GpuKernels.applyFilterProcessor \napplyFilterProcessor \n\n Asynchronous application of the filter kernel to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#rotateKernel","title":"GpuKernels.rotateKernel","content":"GpuKernels.rotateKernel \nrotateKernel \n\n Compilation of kernel to rotate the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#rotateKernelProcessor","title":"GpuKernels.rotateKernelProcessor","content":"GpuKernels.rotateKernelProcessor \nrotateKernelProcessor \n\n Asynchronous application of the rotation kernel to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#mirrorKernel","title":"GpuKernels.mirrorKernel","content":"GpuKernels.mirrorKernel \nmirrorKernel \n\n Compilation of kernel to reflect the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#mirrorKernelProcessor","title":"GpuKernels.mirrorKernelProcessor","content":"GpuKernels.mirrorKernelProcessor \nmirrorKernelProcessor \n\n Asynchronous application of the reflection kernel to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#fishEyeKernel","title":"GpuKernels.fishEyeKernel","content":"GpuKernels.fishEyeKernel \nfishEyeKernel \n\n Compilation of kernel to apply FishEye to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpukernels.html#fishEyeKernelProcessor","title":"GpuKernels.fishEyeKernelProcessor","content":"GpuKernels.fishEyeKernelProcessor \nfishEyeKernelProcessor \n\n Asynchronous application of the fisheye kernel to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpuprocessing.html","title":"GpuProcessing","content":"GpuProcessing \n\n Module with functions for image processing on the GPU\n  \nGpuProcessing.applyFilter \napplyFilter \nGpuProcessing.rotate \nrotate \nGpuProcessing.mirror \nmirror \nGpuProcessing.fishEye \nfishEye"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpuprocessing.html#applyFilter","title":"GpuProcessing.applyFilter","content":"GpuProcessing.applyFilter \napplyFilter \n\n Filter application\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpuprocessing.html#rotate","title":"GpuProcessing.rotate","content":"GpuProcessing.rotate \nrotate \n\n Rotate of image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpuprocessing.html#mirror","title":"GpuProcessing.mirror","content":"GpuProcessing.mirror \nmirror \n\n Reflection of image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-gpuprocessing.html#fishEye","title":"GpuProcessing.fishEye","content":"GpuProcessing.fishEye \nfishEye \n\n Applying fisheye filter to the image\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-imagearrayprocessing.html","title":"ImageArrayProcessing","content":"ImageArrayProcessing \n\n Module with implementation of processing array of images\n  \nImageArrayProcessing.extensions \nextensions \nImageArrayProcessing.listAllFiles \nlistAllFiles \nImageArrayProcessing.arrayOfImagesProcessing \narrayOfImagesProcessing"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-imagearrayprocessing.html#extensions","title":"ImageArrayProcessing.extensions","content":"ImageArrayProcessing.extensions \nextensions \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-imagearrayprocessing.html#listAllFiles","title":"ImageArrayProcessing.listAllFiles","content":"ImageArrayProcessing.listAllFiles \nlistAllFiles \n\n List of all files in directory with correct extensions\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-imagearrayprocessing.html#arrayOfImagesProcessing","title":"ImageArrayProcessing.arrayOfImagesProcessing","content":"ImageArrayProcessing.arrayOfImagesProcessing \narrayOfImagesProcessing \n\n Processing array of images\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-kernels.html","title":"Kernels","content":"Kernels \n\n Module with kernels for image processing\n  \nKernels.gaussianBlurKernel \ngaussianBlurKernel \nKernels.edgesKernel \nedgesKernel \nKernels.gaussianBlur7x7Kernel \ngaussianBlur7x7Kernel \nKernels.sharpenKernel \nsharpenKernel \nKernels.embossKernel \nembossKernel"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-kernels.html#gaussianBlurKernel","title":"Kernels.gaussianBlurKernel","content":"Kernels.gaussianBlurKernel \ngaussianBlurKernel \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-kernels.html#edgesKernel","title":"Kernels.edgesKernel","content":"Kernels.edgesKernel \nedgesKernel \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-kernels.html#gaussianBlur7x7Kernel","title":"Kernels.gaussianBlur7x7Kernel","content":"Kernels.gaussianBlur7x7Kernel \ngaussianBlur7x7Kernel \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-kernels.html#sharpenKernel","title":"Kernels.sharpenKernel","content":"Kernels.sharpenKernel \nsharpenKernel \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-kernels.html#embossKernel","title":"Kernels.embossKernel","content":"Kernels.embossKernel \nembossKernel \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-main.html","title":"Main","content":"Main \n\n Module for processing console commands\n  \nMain.main \nmain"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-main.html#main","title":"Main.main","content":"Main.main \nmain \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage.html","title":"MyImage","content":"MyImage \n\n Module for working with images\n  \nMyImage.MyImage \nMyImage \nMyImage.loadAsImage \nloadAsImage \nMyImage.saveImage \nsaveImage"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage.html#loadAsImage","title":"MyImage.loadAsImage","content":"MyImage.loadAsImage \nloadAsImage \n\n Load image as MyImage type\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage.html#saveImage","title":"MyImage.saveImage","content":"MyImage.saveImage \nsaveImage \n\n Save MyImage in a specific directory\n "},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage-myimage.html","title":"MyImage","content":"MyImage \n\n Type to represent images\n  \nMyImage.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMyImage.Data \nData \nMyImage.Width \nWidth \nMyImage.Height \nHeight \nMyImage.Name \nName"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage-myimage.html#\u0060\u0060.ctor\u0060\u0060","title":"MyImage.\u0060\u0060.ctor\u0060\u0060","content":"MyImage.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage-myimage.html#Data","title":"MyImage.Data","content":"MyImage.Data \nData \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage-myimage.html#Width","title":"MyImage.Width","content":"MyImage.Width \nWidth \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage-myimage.html#Height","title":"MyImage.Height","content":"MyImage.Height \nHeight \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-myimage-myimage.html#Name","title":"MyImage.Name","content":"MyImage.Name \nName \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types.html","title":"Types","content":"Types \n\n Module with necessary algebraic types\n  \nTypes.AgentStatus \nAgentStatus \nTypes.Devices \nDevices \nTypes.MirrorDirection \nMirrorDirection \nTypes.Modifications \nModifications \nTypes.Msg \nMsg \nTypes.Side \nSide"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-agentstatus.html","title":"AgentStatus","content":"AgentStatus \n\n Type for determining the status of an agent\n  \nAgentStatus.On \nOn \nAgentStatus.Off \nOff"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-agentstatus.html#On","title":"AgentStatus.On","content":"AgentStatus.On \nOn \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-agentstatus.html#Off","title":"AgentStatus.Off","content":"AgentStatus.Off \nOff \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-devices.html","title":"Devices","content":"Devices \n\n Type for defining the executor of transformations\n  \nDevices.AnyGpu \nAnyGpu \nDevices.Nvidia \nNvidia \nDevices.Amd \nAmd \nDevices.Intel \nIntel"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-devices.html#AnyGpu","title":"Devices.AnyGpu","content":"Devices.AnyGpu \nAnyGpu \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-devices.html#Nvidia","title":"Devices.Nvidia","content":"Devices.Nvidia \nNvidia \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-devices.html#Amd","title":"Devices.Amd","content":"Devices.Amd \nAmd \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-devices.html#Intel","title":"Devices.Intel","content":"Devices.Intel \nIntel \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-mirrordirection.html","title":"MirrorDirection","content":"MirrorDirection \n\n Type for determining the direction of image reflection\n  \nMirrorDirection.Vertical \nVertical \nMirrorDirection.Horizontal \nHorizontal"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-mirrordirection.html#Vertical","title":"MirrorDirection.Vertical","content":"MirrorDirection.Vertical \nVertical \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-mirrordirection.html#Horizontal","title":"MirrorDirection.Horizontal","content":"MirrorDirection.Horizontal \nHorizontal \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html","title":"Modifications","content":"Modifications \n\n Type for determining the applied image transformation\n  \nModifications.Gauss5x5 \nGauss5x5 \nModifications.Gauss7x7 \nGauss7x7 \nModifications.Edges \nEdges \nModifications.Sharpen \nSharpen \nModifications.Emboss \nEmboss \nModifications.ClockwiseRotation \nClockwiseRotation \nModifications.CounterClockwiseRotation \nCounterClockwiseRotation \nModifications.MirrorVertical \nMirrorVertical \nModifications.MirrorHorizontal \nMirrorHorizontal \nModifications.FishEye \nFishEye"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#Gauss5x5","title":"Modifications.Gauss5x5","content":"Modifications.Gauss5x5 \nGauss5x5 \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#Gauss7x7","title":"Modifications.Gauss7x7","content":"Modifications.Gauss7x7 \nGauss7x7 \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#Edges","title":"Modifications.Edges","content":"Modifications.Edges \nEdges \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#Sharpen","title":"Modifications.Sharpen","content":"Modifications.Sharpen \nSharpen \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#Emboss","title":"Modifications.Emboss","content":"Modifications.Emboss \nEmboss \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#ClockwiseRotation","title":"Modifications.ClockwiseRotation","content":"Modifications.ClockwiseRotation \nClockwiseRotation \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#CounterClockwiseRotation","title":"Modifications.CounterClockwiseRotation","content":"Modifications.CounterClockwiseRotation \nCounterClockwiseRotation \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#MirrorVertical","title":"Modifications.MirrorVertical","content":"Modifications.MirrorVertical \nMirrorVertical \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#MirrorHorizontal","title":"Modifications.MirrorHorizontal","content":"Modifications.MirrorHorizontal \nMirrorHorizontal \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-modifications.html#FishEye","title":"Modifications.FishEye","content":"Modifications.FishEye \nFishEye \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-msg.html","title":"Msg","content":"Msg \n\n Type to define a message to be forwarded between agents\n  \nMsg.Img \nImg \nMsg.Path \nPath \nMsg.EOS \nEOS \nMsg.Message \nMessage"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-msg.html#Img","title":"Msg.Img","content":"Msg.Img \nImg \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-msg.html#Path","title":"Msg.Path","content":"Msg.Path \nPath \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-msg.html#EOS","title":"Msg.EOS","content":"Msg.EOS \nEOS \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-msg.html#Message","title":"Msg.Message","content":"Msg.Message \nMessage \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-side.html","title":"Side","content":"Side \n\n Type for determining the rotation side of the image\n  \nSide.Right \nRight \nSide.Left \nLeft"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-side.html#Right","title":"Side.Right","content":"Side.Right \nRight \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/reference/imageprocessing-types-side.html#Left","title":"Side.Left","content":"Side.Left \nLeft \n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/index.html","title":"index","content":"## What is ImageProcessing?\r\n\r\nA library for image processing using GPGPU and agents for parallel computing. \r\n\r\n---\r\n\r\n\u003Cdiv class=\u0022row row-cols-1 row-cols-md-2\u0022\u003E\r\n  \u003Cdiv class=\u0022col mb-4\u0022\u003E\r\n    \u003Cdiv class=\u0022card h-100\u0022\u003E\r\n      \u003Cdiv class=\u0022card-body\u0022\u003E\r\n        \u003Ch5 class=\u0022card-title\u0022\u003ETutorials\u003C/h5\u003E\r\n        \u003Cp class=\u0022card-text\u0022\u003EHow to get started with ImageProcessing \u003C/p\u003E\r\n      \u003C/div\u003E\r\n      \u003Cdiv class=\u0022card-footer text-right   border-top-0\u0022\u003E\r\n        \u003Ca href=\u0022{{root}}Tutorials/Tutorial.html\u0022 class=\u0022btn btn-primary\u0022\u003EGet started\u003C/a\u003E\r\n      \u003C/div\u003E\r\n    \u003C/div\u003E\r\n  \u003C/div\u003E\r\n  \u003Cdiv class=\u0022col mb-4\u0022\u003E\r\n    \u003Cdiv class=\u0022card h-100\u0022\u003E\r\n      \u003Cdiv class=\u0022card-body\u0022\u003E\r\n        \u003Ch5 class=\u0022card-title\u0022\u003EHow-To Guides\u003C/h5\u003E\r\n        \u003Cp class=\u0022card-text\u0022\u003ELearn how to work with the ImageProcessing library directly in your code \u003C/p\u003E\r\n      \u003C/div\u003E\r\n      \u003Cdiv class=\u0022card-footer text-right   border-top-0\u0022\u003E\r\n        \u003Ca href=\u0022{{root}}/How_Tos/Code.html\u0022 class=\u0022btn btn-primary\u0022\u003EHow to code\u003C/a\u003E\r\n      \u003C/div\u003E\r\n    \u003C/div\u003E\r\n  \u003C/div\u003E\r\n  \u003Cdiv class=\u0022col mb-4 mb-md-0\u0022\u003E\r\n    \u003Cdiv class=\u0022card h-100\u0022\u003E\r\n      \u003Cdiv class=\u0022card-body\u0022\u003E\r\n        \u003Ch5 class=\u0022card-title\u0022\u003EExplanations\u003C/h5\u003E\r\n        \u003Cp class=\u0022card-text\u0022\u003ELearn about the structure of the library\u003C/p\u003E\r\n      \u003C/div\u003E\r\n      \u003Cdiv class=\u0022card-footer text-right   border-top-0\u0022\u003E\r\n        \u003Ca href=\u0022{{root}}Explanations/Structure.html\u0022 class=\u0022btn btn-primary\u0022\u003EStructure\u003C/a\u003E\r\n      \u003C/div\u003E\r\n    \u003C/div\u003E\r\n  \u003C/div\u003E\r\n\u003C/div\u003E"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/Explanations/Structure.html","title":"Structure","content":"---\r\ntitle: Structure\r\ncategory: Explanations\r\ncategoryindex: 3\r\nindex: 1\r\n---\r\n\r\n# Structure of ImageProcessing library\r\n\r\n![image](https://raw.githubusercontent.com/LeonidLodygin/ImageProcessing/gh-pages/images/Structure.png)"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/How_Tos/Code.html","title":"How to code","content":"---\r\ntitle: How to code\r\ncategory: Guides\r\ncategoryindex: 1\r\nindex: 100\r\n---\r\n\r\n# How to code\r\n\r\nIn this tutorial, we will look at how to work with the ImageProcessing library using code rather than console commands.\r\n\r\n## Installing ImageProcessing\r\n\r\n\u0060\u0060\u0060sh\r\n\u003E dotnet add package LeonidLodygin.ImageProcessing --version 1.0.0\r\n\u0060\u0060\u0060\r\n\u003Cdiv class=\u0022alert alert-primary\u0022 role=\u0022alert\u0022\u003E\r\n    \u003Cp\u003E\r\n        NOTE: The library uses .NET 7.0. Make sure your application complies with this requirement.\r\n    \u003C/p\u003E\r\n\u003C/div\u003E\r\n\r\nLoad your image using the \u0060loadAsImage\u0060 function from the \u0060MyImage\u0060 module.\r\n\r\n\u0060\u0060\u0060sh\r\nlet image = loadAsImage \u0022path to the image\u0022\r\n\u0060\u0060\u0060\r\n\r\nFor CPU and GPU the list of transforms is identical, decide what you want to process your image on and select the appropriate function to process from the \u0060CpuProcessing\u0060 module or the \u0060GpuProcessing\u0060 module respectively.\r\n\r\n### In the case of CPU processing:\r\n\r\nApply the fisheye filter to the uploaded image.\r\n\r\n\u0060\u0060\u0060sh\r\nlet newImage = fishEye image\r\n\u0060\u0060\u0060\r\n\r\nDon\u0027t forget to save the processed image using the saveImage function from the \u0060MyImage\u0060 module!\r\n\r\n\u0060\u0060\u0060sh\r\nlet newImage = saveImage \u0022path\u0022\r\n\u0060\u0060\u0060\r\n\r\n### In the case of GPU processing:\r\n\r\nIn the case of GPU processing, you have to go through a few extra steps to achieve your goal:\r\n\r\nPrepare OpenCl context and queue(from \u0060Brahma.FSharp\u0060 module):\r\n\r\n\u0060\u0060\u0060sh\r\nlet clContext = ClContext(ClDevice.GetFirstAppropriateDevice(device))\r\nlet queue = clContext.QueueProvider.CreateQueue()\r\n\u0060\u0060\u0060\r\n\r\nCompile the kernel to apply the filter using the \u0060fishEyeKernel\u0060 function from the \u0060GpuKernels\u0060 module: \r\n\r\n\u0060\u0060\u0060sh\r\nlet fishKernel = fishEyeKernel clContext\r\n\u0060\u0060\u0060\r\n\r\nProcess the image using the \u0060fishEye\u0060 function from the \u0060GpuProcessing\u0060 module:\r\n\r\n\u0060\u0060\u0060sh\r\nlet newImage = fishEye fishKernel clContext 64 queue image\r\n\u0060\u0060\u0060\r\n\r\nDon\u0027t forget to save the new image:\r\n\r\n\u0060\u0060\u0060sh\r\nlet newImage = saveImage \u0022path\u0022\r\n\u0060\u0060\u0060\r\n\r\n\u003Cdiv class=\u0022alert alert-primary\u0022 role=\u0022alert\u0022\u003E\r\n    \u003Cp\u003E\r\n        For more info about GPU processing please check \u003Ca href=\u0022https://yaccconstructor.github.io/Brahma.FSharp/\u0022\u003EBrahma\r\n    \u003C/p\u003E\r\n\u003C/div\u003E\r\n"},{"uri":"https://LeonidLodygin.github.io/ImageProcessing/Tutorials/Tutorial.html","title":"Get Started","content":"---\r\ntitle: Get Started\r\ncategory: Tutorials\r\ncategoryindex: 0\r\nindex: 100\r\n---\r\n\r\n# Get Started\r\n\r\nIn this tutorial we will look at how to get started with the ImageProcessing library and process your first images.\r\n\r\n## Installing ImageProcessing\r\n\r\n\u0060\u0060\u0060sh\r\n\u003E dotnet add package LeonidLodygin.ImageProcessing --version 1.0.0\r\n\u0060\u0060\u0060\r\n\r\n## Processing of images\r\n\r\n### Prepare your images\r\n\r\nDecide on the image you want to process. You can also process several images at once, in which case specify the path to the directory with your images.\r\n\r\nIn the command line parameter \u0022-i\u0022 use the path to the image, for \u0022-o\u0022 use the path where you want to save the image.\r\n\u003Cdiv class=\u0022alert alert-primary\u0022 role=\u0022alert\u0022\u003E\r\n    \u003Cp\u003E\r\n        NOTE: Do not use the same directory as your images for saving, if you do, you will lose the original images!\r\n    \u003C/p\u003E\r\n\u003C/div\u003E\r\n\r\n### Choose the desired modifications\r\n\r\nDecide on the modifications you want to apply to the image. Here is a complete list of available modifications:\r\n\r\n- Gauss5x5 \r\n- Gauss7x7\r\n- Edges\r\n- Sharpen\r\n- Emboss\r\n- ClockwiseRotation\r\n- CounterClockwiseRotation\r\n- MirrorVertical\r\n- MirrorHorizontal\r\n- FishEye\r\n\r\nUse the selected modification or modification list for the \u0022-mod\u0022 parameter.\r\n\r\n### CPU or GPU processing?\r\n\r\nBy default, all processing will be done at the expense of the CPU. If you want to process images using GPGPU, use the \u0022-gpu\u0022 parameter (if the device has a video card):\r\n\r\n- AnyGpu\r\n- Nvidia\r\n- Amd\r\n- Intel\r\n\r\n### How many logical cores does your system have?\r\n\r\nIn the case of processing a large number of images, it would be logical to utilize the parallel processing power of your device. To do this, use the \u0022-ag\u0022 or \u0022-sag\u0022 parameter. The \u0022-ag\u0022 parameter will split image processing and saving tasks into two separate computational threads. The \u0022-sag\u0022 parameter will allocate the number of threads you need to process and save images independently. For this parameter you should specify the number of threads you need.\r\n\r\n### Let\u0027s start processing!\r\n\r\nThe end result may look like the following:\r\n\u0060\u0060\u0060sh\r\n\u003E dotnet run -i *input path* -o *output path* -mod FishEye -gpu AnyGpu\r\n\u0060\u0060\u0060"}]